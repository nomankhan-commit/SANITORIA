
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/myLayout.cshtml";
}


<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />

<div>

    <h4>Purchase Order :   <span id="soid_"></span></h4>
    <div class="row">

        <div class="col-md-6">
            <div>
                @if (ViewBag.id > 0)
                {
                    <button class="btn btn-default" id="email">Email</button>
                    <button class="btn btn-default" id="conformorder">Confirm Order</button>
                    <button class="btn btn-default" id="receivedorder" style="display:none">Received Order</button>
                }

            </div>

        </div>

        <div class="col-md-6">

            <h4 id="status_">status</h4>
        </div>

    </div>

    <form id="taxform">
        <div class="row">
            <input type="hidden" id="id" value="@ViewBag.id" />
            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Customer:</label>
                    <select class="form-control" id="vendor">
                        @foreach (var item in ViewBag.customer.data1)
                        {
                            <option value="@item.id"> @item.Name </option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Order Deadline:</label>
                    <input type="date" class="form-control" id="orderdeadline">
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Company:</label>
                    <select class="form-control" id="company">
                        @foreach (var item in ViewBag.Company.data1)
                        {
                            <option value="@item.id"> @item.Comapny1 </option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Receipt Date:</label>
                    <input type="date" class="form-control" id="receiptdate">
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Currency:</label>
                    <input type="text" readonly value="PKR" id="currency" class="form-control">
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Deliver To:</label>
                    @*<input type="date" class="form-control" id="deliverto">*@

                    <select class="form-control" id="deliverto">
                        @foreach (var item in ViewBag.warehouse.data1)
                        {
                            <option value="@item.id"> @item.warehouse1 </option>
                        }
                    </select>

                </div>
            </div>


        </div>

    </form>


    <div>
        <div class="row">
            <div class="col-md-12">
                <button type="button" id="addproduct" class="btn btn-primary">Add</button>
                <table class="table" id="productTable">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Varient</th>
                            <th>QTY</th>
                            <th>Unit Price</th>
                            <th>Taxes</th>
                            <th>Sub Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="producttablebody">
                    </tbody>
                </table>
            </div>


            <div class="col-md-6"><button type="button" id="save" class="btn btn-default">Save</button></div>
            <div class="col-md-6"><h4 id="overallsum"></h4></div>


        </div>

    </div>


</div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js" defer></script>
<script src="~/Scripts/MyScripts/devExhelper.js"></script>
<script src="~/Scripts/MyScripts/fin_common.js"></script>
<script src="~/Scripts/Lib/SO.js"></script>
<script src="~/Scripts/Lib/bem_common.js"></script>
<script src="~/Scripts/MyScripts/AjaxHelper.js"></script>

<script>

    $(document).ready(function () {



        so.varient = @Html.Raw(Json.Encode(ViewBag.varient));
        so.tax = @Html.Raw(Json.Encode(ViewBag.tax));
        so.products = @Html.Raw(Json.Encode(ViewBag.products));
        so.productsVarient = @Html.Raw(Json.Encode(ViewBag.productvarient));

        if ($('#id').val() > 0) {
            so.getByid($('#id').val());
        }

        //
        $('#conformorder').click(function () {

            so.orderConform($('#id').val());

        })


        $('#addproduct').click(function () {

            debugger;

            let product = so.products.data1.map(e => ("<option  value='" + e.pid + "'  tax='" + e.p_tax + "' >  " + e.P_name + "  </option>")).join('');
            let tax = so.tax.data1.map(e => ("<option value='" + e.id + "'>   " + e.TaxName + "  </option>")).join('');

            let taxguid = "id" + bem_common.getGuid();
            tax = "<select class='form-control tax' id='" + taxguid + "' multiple>  " + tax + "  </select>";
            product = "<select class='form-control product'>  " + product + "  </select>";



            let subtotal = "<input type='text' readonly class='subtotal form-control'>";
            let btn = "<button class='form-control btn removevProduct' type='button'>delete</button>";

            let qty = `<input type='number' onkeyup='so.calculate(this)' class='qty form-control' maxLength='5' min="0"
                oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"  >`;

            let unitprice = `<input type='number' onkeyup='so.calculate(this)' class='unitprice form-control' min="0"
                            maxLength='5' oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);">`;



            let tbody = `<tr Guid='${bem_common.getGuid()}'>
                            <td product> ${product}</td>
                            <td varient>   </td>
                            <td qty> ${qty} </td>
                            <td unitprice>  ${unitprice} </td>
                            <td taxes> ${tax}  </td>
                            <td subtotal> ${subtotal}  </td>
                            <td> ${btn}  </td>
                            </tr>`;
            $('#producttablebody').append(tbody);

            setTimeout((e) => {

                $("#" + taxguid).select2();

            }, 100)


        })


        //$('#addproduct').click(function () {

        //    debugger;

        //    let product = so.products.data1.map(e => ("<option  value='" + e.pid + "'  tax='" + e.p_tax+"' >  " + e.P_name + "  </option>")).join('');
        //    let tax = so.tax.data1.map(e => ("<option value='" + e.id + "'>   " + e.TaxName + "  </option>")).join('');

        //    let taxguid = "id"+bem_common.getGuid();
        //    tax = "<select class='form-control tax' id='" + taxguid +"' multiple>  " + tax + "  </select>";
        //    product = "<select class='form-control product'>  " + product + "  </select>";

        //    let qty = "<input type='number' onkeyup='so.calculate(this)' class='qty form-control'>";
        //    let unitprice = "<input type='number' onkeyup='so.calculate(this)' class='unitprice form-control'>";
        //    let subtotal = "<input type='text' readonly class='subtotal form-control'>";
        //    let btn = "<button class='form-control btn removevProduct' type='button'>delete</button>";

        //    let tbody = `<tr Guid='${bem_common.getGuid()}'>
        //                    <td product> ${product}</td>
        //                    <td varient>   </td>
        //                    <td qty> ${qty} </td>
        //                    <td unitprice>  ${unitprice} </td>
        //                    <td taxes> ${tax}  </td>
        //                    <td subtotal> ${subtotal}  </td>
        //                    <td> ${btn}  </td>
        //                    </tr>`;
        //    $('#producttablebody').append(tbody);

        //    setTimeout((e) =>{

        //        $("#" + taxguid).select2();

        //    }, 100)


        //})

        $('body').on('click', '.removevProduct', function () {

            $(this).closest('tr').remove();

        })


        $('body').on('click', '#save', function () {

            let orderdeadline = $('#orderdeadline');
            let receiptdate = $('#receiptdate');

            debugger;
            let valid = true;

            if (orderdeadline.val().trim() == '') {
                $(orderdeadline).addClass('inputborder');
                valid = false;
            } else {
                $(orderdeadline).removeClass('inputborder');
            }

            if (receiptdate.val().trim() == '') {
                $(receiptdate).addClass('inputborder');
                valid = false;
            } else {
                $(receiptdate).removeClass('inputborder');
            }

            if (fin_common.getDifferenceInDays(orderdeadline.val(), receiptdate.val()) <= 30) {

            } else {
                fin_common.showToast(2, 'Select b/w 1 to 30 days.');
                valid = false;
            }

            if (!valid) {
                fin_common.showToast(2, 'Please fill all inputs.');
                return;
            }


            so.save();

        })


        $('body').on('change', '.tax', function () {

            so.calculate(this);

        })


        $('body').on('click', '#receivedorder', function () {
            debugger;

            let orderdeadline = $('#orderdeadline');
            let receiptdate = $('#receiptdate');

            debugger;
            let valid = true;

            if (orderdeadline.val().trim() == '') {
                $(orderdeadline).addClass('inputborder');
                valid = false;
            } else {
                $(orderdeadline).removeClass('inputborder');
            }

            if (receiptdate.val().trim() == '') {
                $(receiptdate).addClass('inputborder');
                valid = false;
            } else {
                $(receiptdate).removeClass('inputborder');
            }

            if (fin_common.getDifferenceInDays(orderdeadline.val(), receiptdate.val()) <= 30) {

            } else {
                fin_common.showToast(2, 'Select b/w 1 to 30 days.');
                valid = false;
            }



            if (!valid) {
                fin_common.showToast(2, 'Please fill all inputs.');
                return;
            }


            if (so.getAllProductsDetails() == null || so.getAllProductsDetails() == undefined || so.getAllProductsDetails().length == 0) {
                fin_common.showToast(2, 'Please add product.');
                return;
            }

            if (!so.getAllProductsDetailsValidation()) {
                fin_common.showToast(2, 'Please fill all inputs fields.');
                return;
            }

            if (!so.checkNegative()) {
                fin_common.showToast(2, 'Value can not be negative.');
                return;
            }


           let soid  =  $('#id').val()
            window.location.href = fin_common.sitrurl + "/SalesReccievd/soReceived?soid=" + soid;
        })


        $('body').on('change', '.product', function () {

            let id = $(this).val();
            debugger;
            if (so.productsVarient.data1 != null && so.productsVarient.data1.length > 0) {
                let vari = so.productsVarient.data1.filter(x => { return x.p_id == id })[0].variantValues;

                if (vari != null && vari.length > 0) {

                    let g = bem_common.getGuid();
                    let pvar = so.productsVarient.data1
                        .filter(x => { return x.p_id == id })
                        .map(e => (e.variantID)).join(',').split(',');
                    let grsopt = "";
                    for (var i = 0; i < pvar.length; i++) {

                        var varients = so.productsVarient.data1.
                            filter(e => { return e.p_id == id && e.variantID == pvar[i] })[0]
                            .variantValues.split(',');
                        let opts = "";

                        for (var j = 0; j < varients.length; j++) {
                            opts += `<option value="${varients[j]}">  ${varients[j]}  </option>`;
                        }

                        let varname = so.varient.data1.filter(e => { return e.id == pvar[i] })[0].VariantName
                        grsopt += `<optgroup label="${varname}">  ${opts}  </optgroup>`;

                    }

                    let finalSelect = `<select class="varient" id="${g}" multiple> ${grsopt} </select>`;
                    $(this).closest('tr').find('td[varient]').html(finalSelect);




                    setTimeout((e) => {

                        $("#" + g).select2({ maximumSelectionLength: pvar.length });

                    }, 100)
                }

                if (so.products.data1 != null && so.products.data1.length > 0) {
                    let cost = so.products.data1.filter(e => (e.pid == id))[0].cost;
                    $(this).closest('tr').find('td[unitprice] .unitprice').val(cost);
                    $(this).closest('tr').find('td[subtotal] .subtotal').val('');
                    $(this).closest('tr').find('td[qty] .qty').val('');
                }

            }

            debugger;

        })


        //$('body').on('change', '.product', function () {

        //    let id = $(this).val();

        //    if (so.productsVarient.data1 != null && so.productsVarient.data1.length > 0) {
        //        let vari = so.productsVarient.data1.filter(x => { return x.p_id == id })[0].variantValues;

        //        if (vari!=null && vari.length>0) {

        //            let g = bem_common.getGuid();

        //           let opt = so.productsVarient.data1
        //                .filter(x => { return x.p_id == id })
        //                .map(e => (e.variantValues)).join(',').split(',')
        //                .map(o => ('<option>  ' + o + ' </option>')).join(' ');
        //            let sel = "<select class='form-control varient' id='"+g+"' multiple>  " + opt + "  </select>";

        //            $(this).closest('tr').find('td[varient]').html(sel);

        //            setTimeout((e) => {

        //                $("#" + g).select2();

        //            }, 100)
        //        }

        //        if (so.products.data1 != null && so.products.data1.length > 0)
        //        {
        //           let cost = so.products.data1.filter(e => (e.pid == id))[0].cost;
        //            $(this).closest('tr').find('td[unitprice] .unitprice').val(cost);
        //            $(this).closest('tr').find('td[subtotal] .subtotal').val('');
        //            $(this).closest('tr').find('td[qty] .qty').val('');
        //        }

        //    }

        //    debugger;

        //})



    })





</script>